{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["greenStar","react_default","a","createElement","xmlns","width","height","viewBox","fill","d","grayStar","searchIcon","App","state","data","wasteData","map","item","fav","filter","display","rows","handleChange","event","_this","setState","target","value","handleEnter","key","handleSearch","_this2","this","_this$state","iD","findIndex","obj","title","iR","prevState","concat","Object","toConsumableArray","slice","objectSpread","_this3","keywords","search","category","input","e","document","innerHTML","childNodes","length","nodeValue","list","_this4","row","index","index_es","className","onClick","handleFavourite","dangerouslySetInnerHTML","__html","htmlDecode","body","_this5","favs","style","margin","flexDirection","id","type","onChange","onKeyPress","variant","marginLeft","renderRows","backgroundColor","alignItems","justifyContent","color","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c01ddfed.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Button, IconButton, Table, TableBody, TableCell, TableRow, TextField } from '@material-ui/core';\nimport wasteData from './data.json';\n\nconst greenStar = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill = \"green\">\n    <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"/>\n  </svg>\n);\n\nconst grayStar = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill = \"gray\">\n  < path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"/>\n  </svg>\n);\n\nconst searchIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill = \"white\">\n    <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n  </svg>\n);\n\nclass App extends Component {\n  state = {\n    data: wasteData.map(item => {\n      item.fav = false;\n      return item;\n    }),\n    filter: \"\",\n    display: \"\",\n    rows: null,\n  }\n  \n  handleChange = event => {\n    this.setState({\n      filter: event.target.value,\n      rows: event.target.value === \"\" ? null : this.state.rows,\n    });\n  } \n\n  handleFavourite(item){\n    const { data, rows } = this.state;\n    \n    let iD = data.findIndex(obj => obj.title === item.title);\n    let iR = rows.findIndex(obj => obj.title === item.title);\n\n    this.setState(prevState => ({\n      data: iR >= 0 \n        ? [\n        ...prevState.data.slice(0,iD),\n        {\n            ...data[iD],\n            fav: !item.fav,\n        },\n        ...prevState.data.slice(iD+1),\n      ]\n      : this.state.data,\n      rows: iR >= 0 \n        ? [\n          ...prevState.rows.slice(0,iR),\n          {\n              ...rows[iR],\n              fav: !item.fav,\n          },\n          ...prevState.rows.slice(iR+1),\n        ] \n        : this.state.rows,\n    }));\n  }\n\n  handleEnter=(event)=>{\n    if(event.key === 'Enter') {\n      this.handleSearch()\n    }\n  }\n\n  handleSearch(){\n    this.setState({\n      display: this.state.filter,\n      rows: this.state.filter === \"\" \n        ? null \n        : this.state.data.filter(item => item.keywords.search(this.state.filter) >= 0 || item.category.search(this.state.filter) >= 0),\n    });\n  }\n\n  htmlDecode(input){\n    var e = document.createElement('div');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n  }\n\n  renderRows(list){\n    return(\n      list.map((row, index) => (\n        <TableRow className='Table_Row' key={index}>\n           <TableCell>\n            <IconButton onClick={()=> {this.handleFavourite(row)}}>\n            {row.fav ? greenStar : grayStar}\n            </IconButton>\n          </TableCell>\n          <TableCell>{row.title}</TableCell>\n          <TableCell>\n            <div dangerouslySetInnerHTML= {{__html: this.htmlDecode(row.body)}}/>\n          </TableCell>\n        </TableRow>\n      ))\n    )\n  }\n\n  render() {\n    let favs = this.state.data.filter(item => item.fav === true);\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            Toronto Waste Lookup\n          </p>\n        </header>\n        <div style= {{margin:30, 'flexDirection': 'column'}}>\n          <div className=\"Row\">            \n            <TextField id=\"searchField\" type=\"text\" onChange={this.handleChange} onKeyPress ={this.handleEnter} variant=\"outlined\" />\n            <Button id=\"search\" variant=\"contained\" onClick = {()=>{this.handleSearch()}} style={{marginLeft: 20}}>\n              {searchIcon}\n            </Button>\n          </div>\n          <Table className='Table'>\n            <TableBody >\n              {this.state.rows && \n                this.renderRows(this.state.rows)}\n            </TableBody>\n          </Table>\n          {favs.length > 0 ? <div style={{backgroundColor: '#f7fefa', alignItems: 'flex-start', justifyContent: 'flex-start', color : '#23995c'}}>\n            Favourites\n            <Table>\n              <TableBody >\n                { this.renderRows(favs) }\n              </TableBody>\n            </Table>\n          </div>\n          : null }          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}