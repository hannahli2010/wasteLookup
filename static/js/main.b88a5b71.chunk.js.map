{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["greenStar","react_default","a","createElement","xmlns","width","height","viewBox","fill","d","grayStar","searchIcon","App","state","data","filter","display","rows","handleChange","event","_this","setState","target","value","toUpperCase","handleEnter","key","handleSearch","item","keywords","search","_this2","this","fetch","then","res","json","result","map","fav","error","console","log","nextProps","nextState","e","_this3","_this$state","iD","findIndex","obj","title","iR","prevState","concat","Object","toConsumableArray","slice","objectSpread","input","document","innerHTML","childNodes","length","nodeValue","list","_this4","row","index","index_es","className","onClick","handleFavourite","style","dangerouslySetInnerHTML","__html","htmlDecode","body","favs","margin","flexDirection","variant","type","onChange","onKeyPress","marginLeft","backgroundColor","renderRows","color","float","fontSize","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b88a5b71.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Button, IconButton, Table, TableRow, TableCell, TextField, TableBody } from '@material-ui/core';\r\n//import wasteData from './data.json';\r\n\r\nconst greenStar = (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill = \"#23995c\">\r\n    <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"/>\r\n  </svg>\r\n);\r\n\r\nconst grayStar = (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill = \"gray\">\r\n  < path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"/>\r\n  </svg>\r\n);\r\n\r\nconst searchIcon = (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill = \"white\">\r\n    <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\r\n  </svg>\r\n);\r\n\r\nclass App extends Component {\r\n  state = {\r\n    data: \"\",\r\n    \r\n    /*wasteData.map(item => {\r\n      item.fav = false;\r\n      return item;\r\n    }),*/\r\n    filter: \"\",\r\n    display: \"\",\r\n    rows: null,\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://secure.toronto.ca/cc_sr_v1/data/swm_waste_wizard_APR?limit=1000\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            data: result.map(item => {\r\n              item.fav = false;\r\n              return item;\r\n            })\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n          this.setState({\r\n            data: \"error\",\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    return this.state.rows !== nextState.rows;\r\n  }\r\n  \r\n  handleChange = event => {\r\n    this.setState({\r\n      filter: event.target.value.toUpperCase(),\r\n      rows: event.target.value === \"\" ? null : this.state.rows,\r\n    });\r\n  } \r\n\r\n  handleFavourite(item, e){\r\n\r\n    console.log(e);\r\n    const { data, rows } = this.state;\r\n    \r\n    let iD = data.findIndex(obj => obj.title === item.title);\r\n    let iR = rows? rows.findIndex(obj => obj.title === item.title) : -1;\r\n    this.setState(prevState => ({\r\n      data: iD >= 0 \r\n        ? [\r\n        ...prevState.data.slice(0,iD),\r\n        {\r\n            ...data[iD],\r\n            fav: !item.fav,\r\n        },\r\n        ...prevState.data.slice(iD+1),\r\n      ]\r\n      : this.state.data,\r\n      rows: iR >= 0 \r\n        ? [\r\n          ...prevState.rows.slice(0,iR),\r\n          {\r\n              ...rows[iR],\r\n              fav: !item.fav,\r\n          },\r\n          ...prevState.rows.slice(iR+1),\r\n        ] \r\n        : this.state.rows,\r\n    }));\r\n  }\r\n\r\n  handleEnter = event => {\r\n    if(event.key === 'Enter') {\r\n      this.handleSearch()\r\n    }\r\n  }\r\n\r\n  handleSearch = () => {\r\n    this.setState({\r\n      display: this.state.filter,\r\n      rows: this.state.filter === \"\"\r\n        ? null \r\n        : this.state.data && this.state.data.filter(item => item.keywords.toUpperCase().search(this.state.filter) >= 0),\r\n    });\r\n  }\r\n\r\n  htmlDecode(input){\r\n    var e = document.createElement('div');\r\n    e.innerHTML = input;\r\n    return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\r\n  }\r\n\r\n  renderRows(list){\r\n    console.log(\"call\");\r\n    return(\r\n      list.map((row, index) => (\r\n        <TableRow className='Table_Row' key={index} >\r\n           <TableCell>\r\n            <IconButton onClick={(event)=>{this.handleFavourite(row, event)}}>\r\n            {row.fav ? greenStar : grayStar}\r\n            </IconButton>\r\n          </TableCell>\r\n          <TableCell style={{width: '30%'}}>{row.title}</TableCell>\r\n          <TableCell style={{width: '60%'}}>\r\n            <div dangerouslySetInnerHTML= {{__html: this.htmlDecode(row.body)}}/>\r\n          </TableCell>\r\n        </TableRow>\r\n      ))\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let favs = this.state.data && this.state.data.filter(item => item.fav === true);\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <p>\r\n            Toronto Waste Lookup\r\n          </p>\r\n        </header>\r\n        <div style= {{margin:30, 'flexDirection': 'column'}}>\r\n          <div className=\"Row\">    \r\n            <TextField style ={{width: '50%'}} variant=\"outlined\" type=\"text\" onChange={this.handleChange} onKeyPress ={this.handleEnter}  />\r\n            <Button style={{marginLeft: 20, height: 50, backgroundColor: '#23995c'}} variant=\"contained\" onClick = {this.handleSearch} >\r\n              {searchIcon}\r\n            </Button> \r\n          </div>\r\n          <Table>\r\n            <TableBody>\r\n            {this.state.rows && \r\n              this.renderRows(this.state.rows)}\r\n            </TableBody>\r\n          </Table>\r\n          <div style={{height: 20}}/>\r\n          {favs.length > 0 ? \r\n            <div style= {{backgroundColor: '#f7fefa', color : '#23995c'}}>\r\n              <b style ={{float: 'left', marginLeft: 10, fontSize: 25}}>Favourites</b>\r\n              <Table style={{color: 'black'}}>\r\n                <TableBody>\r\n                { this.renderRows(favs) }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          : null }          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}